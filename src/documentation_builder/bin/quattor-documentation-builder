#!/usr/bin/env python2
"""
Documentation-builder generates reStructuredText documentation.

It get this from:
 - configuration-modules-core perl documentation
 - configuration-modules-grid perl documentation
 - CAF perl documentation
 - CCM perl documentation
 - schema pan annotations
 and creates a index for the website on http://quattor.org.
@author: Wouter Depypere (Ghent University)
"""

from vsc.utils import fancylogger
from vsc.utils.generaloption import simple_option
from quattordocbuild.builder import build_documentation

logger = fancylogger.getLogger()


def main(repolocation, outputlocation, maven_compile, cleanup_options):
    """Main run of the script."""
    build_documentation(repolocation, cleanup_options, maven_compile, outputlocation)


if __name__ == '__main__':
    OPTIONS = {
        'modules_location': ('The location of the repo checkout.', None, 'store', None, 'm'),
        'output_location': ('The location where the output markdown files should be written to.', None, 'store', None, 'o'),
        'maven_compile': ('Execute a maven clean and maven compile before generating the documentation.', None, 'store_true', False, 'c'),
        'remove_emails': ('Remove email addresses from generated rst files.', None, 'store_true', True, 'r'),
        'codify_paths': ('Put paths inside code tags.', None, 'store_true', False, 'p'),
    }
    GO = simple_option(OPTIONS)
    logger.info("Starting main.")
    cleanup_options = {
        'remove_emails': GO.options.remove_emails,
        'codify_paths': GO.options.codify_paths,
    }
    main(GO.options.modules_location, GO.options.output_location, GO.options.maven_compile, cleanup_options)
    logger.info("Done.")
